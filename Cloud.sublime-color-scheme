{
  "variables": {
    "bg": "white",
    "fg": "black",
    "comment_bg": "var(bg)",
    "comment_fg": "hsl(60, 20%, 60%)",
    "comment_block_bg": "hsl(45, 100%, 98%)",
    "comment_block_fg": "var(string_fg)",
    "keyword_bg": "var(bg)",
    "keyword_fg": "hsl(86, 48%, 35%)",
    "operator_bg": "var(bg)",
    "operator_fg": "hsl(232, 49%, 59%)",
    "storage_bg": "var(bg)",
    "storage_fg": "hsl(273, 100%, 36%)",
    "constant_bg": "hsl(245, 100%, 97%)",
    "constant_fg": "hsl(259, 47%, 54%)",
    "var_bg": "var(bg)",
    "var_fg": "hsl(207, 52%, 54%)",
    "name_bg": "var(bg)",
    "name_fg": "var(keyword_fg)",
    "type_bg": "var(bg)",
    "type_fg": "hsl(260, 59%, 28%)",
    "string_bg": "color(hsl(46, 91%, 83%) alpha(0.1))",
    "string_fg": "hsl(31, 85%, 40%)",
    "string_escape_bg": "color(hsl(46, 91%, 83%) alpha(0.8))",
    "string_escape_fg": "var(string_fg)",
    "symbol_bg": "hsl(93, 100%, 92%)",
    "symbol_fg": "var(fg)",
    "xml_tag_bg": "hsl(207, 100%, 98%)",
    "xml_tag_fg": "hsl(206, 54%, 40%)",
    "xml_bracket_bg": "var(bg)",
    "xml_bracket_fg": "var(xml_attr_fg)",
    "xml_attr_bg": "var(bg)",
    // very similar to var_fg, should deduplicate?
    "xml_attr_fg": "hsl(203, 57%, 56%)",
    "diff_range_bg": "hsl(196, 35%, 94%)",
    "diff_range_fg": "var(inserted_fg)",
    "deleted_bg": "hsl(0, 100%, 93%)",
    "deleted_fg": "var(inserted_fg)",
    "inserted_bg": "hsl(120, 100%, 93%)",
    "inserted_fg": "hsl(0, 0%, 26%)",
    "raw_bg": "var(bg)",
    "raw_fg": "hsl(0, 0%, 50%)",
  },
  "globals": {
    "background": "var(bg)",
    "foreground": "var(fg)",
    "caret": "var(fg)",
    "invisibles": "hsl(0, 0%, 88%)",
    "line_highlight": "color(hsl(0, 0%, 30%) alpha(0.15))",
    "selection": "hsl(203, 100%, 88%)",
    "selection_border": "hsl(203, 45%, 77%)",
  },
  "rules": [
    {
      "scope": "comment",
      "background": "var(comment_bg)",
      "foreground": "var(comment_fg)",
    },
    {
      "scope": "comment.documentation, comment.block.documentation",
      "background": "var(comment_block_bg)",
      "foreground": "var(comment_block_fg)",
    },
    // {
    //   "scope": "punctuation.section",
    //   "background": "var(comment_bg)",
    //   "foreground": "var(comment_fg)",
    // },
    {
      "scope": "invalid.illegal",
      "background": "red",
      "foreground": "var(fg)",
      "foreground": "white",
    },
    {
      "scope": "invalid.deprecated",
      "background": "pink",
      "foreground": "var(fg)",
      "font_style": "italic",
    },
    {
      "scope": "string",
      "background": "var(string_bg)",
      "foreground": "var(string_fg)",
    },
    {
      "scope": "string constant.character",
      "background": "var(string_bg)",
      "foreground": "var(string_fg)",
    },
    {
      "scope": "constant.character.escape, constant.numeric.rune.escape",
      "font_style": "bold",
    },
    {
      "scope": "constant, variable.language, support.constant",
      "background": "var(constant_bg)",
      "foreground": "var(constant_fg)",
    },
    {
      "scope": "constant.numeric, constant.character",
      "background": "var(constant_bg)",
      "foreground": "var(constant_fg)",
    },
    {
      "scope": "constant.numeric.octal",
      "background": "var(bg)",
      "foreground": "magenta",
    },
    {
      "scope": "constant.other.symbol, punctuation.definition.annotation, variable.annotation, keyword.operator.macro",
      "background": "var(symbol_bg)",
      "foreground": "var(symbol_fg)",
    },
    {
      "scope": "keyword, punctuation.accessor.dot",
      "background": "var(keyword_bg)",
      "foreground": "var(keyword_fg)",
    },
    {
      "scope": "punctuation.separator.decimal - invalid, punctuation.separator.exponent - invalid",
      "background": "var(bg)",
    },
    {
      "scope": "punctuation.definition.numeric - invalid, punctuation.separator.ratio - invalid",
      "background": "var(bg)",
    },
    // {
    //   "scope": "keyword.operator",
    //   "background": "var(operator_bg)",
    //   "foreground": "var(operator_fg)",
    // },
    {
      "scope": "storage",
      "background": "var(storage_bg)",
      "foreground": "var(storage_fg)",
    },
    {
      // "scope": "variable.function, support.function, variable.other.member",
      "scope": "variable.function, support.function",
      "background": "var(var_bg)",
      "foreground": "var(var_fg)",
    },
    {
      "scope": "entity.name, variable.declaration, variable.other.constant.declaration, variable.other.member.declaration, variable.parameter",
      "background": "var(var_bg)",
      "foreground": "var(var_fg)",
      "font_style": "italic",
    },
    {
      "scope": "entity.name.function",
      "background": "var(name_bg)",
      "foreground": "var(name_fg)",
    },
    {
      "scope": "entity.name.type, entity.name.class, entity.name.struct, entity.name.enum, entity.name.union, entity.name.trait, entity.name.interface, support.type, support.class, entity.other.inherited-class",
      "background": "var(type_bg)",
      "foreground": "var(type_fg)",
    },
    {
      "scope": "punctuation.definition.tag",
      "background": "var(xml_bracket_bg)",
      "foreground": "var(xml_bracket_fg)",
    },
    {
      "scope": "entity.other.attribute-name",
      "background": "var(xml_attr_bg)",
      "foreground": "var(xml_attr_fg)",
    },
    {
      "scope": "entity.name.tag",
      "background": "var(xml_tag_bg)",
      "foreground": "var(xml_tag_fg)",
      "font_style": "",
    },
    {
      "scope": "meta.diff.range",
      "background": "var(diff_range_bg)",
      "foreground": "var(diff_range_fg)",
    },
    {
      "scope": "markup.deleted, meta.diff.header.from-file",
      "background": "var(deleted_bg)",
      "foreground": "var(deleted_fg)",
    },
    {
      "scope": "markup.inserted, meta.diff.header.to-file",
      "background": "var(inserted_bg)",
      "foreground": "var(inserted_fg)",
    },
    {
      "scope": "markup.changed",
      "background": "var(string_bg)",
      "foreground": "var(string_fg)",
    },
    {
      "scope": "markup.bold",
      "font_style": "bold",
    },
    {
      "scope": "markup.italic",
      "font_style": "italic",
    },
    {
      "scope": "markup.raw, markup.output, punctuation.definition.thematic-break",
      "background": "var(raw_bg)",
      "foreground": "var(raw_fg)",
    },
    {
      "scope": "markup.link, markup.underline.link",
      "background": "var(bg)",
      "foreground": "var(var_fg)",
    },

    /* Syntax-specific */

    // JSCustom
    {
      "scope": "source.js meta.object-literal.key",
      "background": "var(string_bg)",
      "foreground": "var(string_fg)",
    },
    {
      "scope": "source.js support.constant.dom",
      "background": "var(bg)",
      "foreground": "var(fg)",
    },
    {
      "scope": "source.js punctuation.definition.template-expression",
      "background": "var(keyword_bg)",
      "foreground": "var(keyword_fg)",
    },
    // Star imports and exports are operators, not constants
    {
      "scope": "meta.import.js constant.other.js, meta.export.js constant.other.js",
      "background": "var(keyword_bg)",
      "foreground": "var(keyword_fg)",
    },
    {
      "scope": "source.js variable.type, source.js variable.other.class",
      "background": "var(type_bg)",
      "foreground": "var(type_fg)",
    },
    {
      "scope": "source.js meta.binding.name, meta.export.js variable.other.readwrite.js - meta.block",
      "background": "var(var_bg)",
      "foreground": "var(var_fg)",
      "font_style": "italic",
    },
  ]
}
